ANDROID INTERVIEW GUIDE 


Android :


ROUND 1 (Core android) ->

Explain activity/fragment lifecycle  properly
What is an interface ? Can an Interface extend another Interface?
What’s the difference between an Interface and an abstract class?
Can you use a Fragment without UI? What cases could make you use this pattern?
When do u get Stackoverflow Exception vs OutOfMemoryException
What is a Broadcast receiver? What are diff types and why do we use them?
Difference between AsyncTask and Thread?
How will you update the UI from a background thread?
What is the difference between add() and replace() in a fragment?
What is a ViewHolder pattern?
Explain about Handlers and Loopers.
Rxjava schedulers 
Flatmap, concat map, merge, concat operators
Dagger overview 
How to handle Apk,size
Kotlin Lazy types, uses, difference from lateinit, inline
Java : String pool / buffer vs builder
Volatile, atomic, singleton pattern
When would you use a Java thread instead of an AsyncTask? 
Viewmodel internals, LiveData uses, can we use context within viewmodel? Why? how?
Retrofit interceptors, Authenticator - Have you used it earlier?
Role of proguard
What is Context? Explain Application Context and ActivityContext
Android Architecture Components?
S.O.L.I.D principles in software development?
Difference between listview and recyclerview? How is recyclerview better than listview?
How does recyclerview work?
How does push notification work?
Design Patterns with code implementation
Singleton
Observer
Factory
Difference between var ,val, lateinit, transient
Data class, Sealed class
What’s Init block in kotlin ?
What’s the difference between .run and .apply?
High order functions
 What is serialisation and parcelable ? 
What is the difference between fragments & activities? Explain the relationship between the two
What Are Companion Objects?
How Do You Do Type Checking in Kotlin?
What Is a Lambda Expression?
Explain the build process in Android?
Different Launch modes in Android?
Describe services - Difference between Service & Intent Service
What is a ThreadPool? And is it more effective than using several separate Threads?
What is the intent?  - implicit and explicit
When might you use a FrameLayout?
What Is a Class Extension?
What are kotlin scoping functions - apply, run, also, let
How does livedata work? How does it differ from rxjava? Which one will you prefer? Since we were having rxjava already, why was live data introduced ?
How did you communicate between fragments and activities?
Do you know about clean architecture -> Please explain
What’s the difference between an Observable and a Single?
Do you know any RxJava constructs other than Observable? Describe them?
What’s the difference between onNext(), onComplete() and onError()?
What’s going to happen if you have multiple subscribeOn() operators in a chain?
What’s the difference between a map() and a flatMap()?
Difference between ‘throw’ and ‘throws’ in Java Exception Handling?
What are anonymous classes?
What is a garbage collector? How does it work?
Difference between stack memory & heap memory?
What is Polymorphism in OOPS? Give an example?
Do objects get passed by reference or value in Java? Elaborate on that.
String pool in Java? How it works
What does the keyword synchronised mean?
How does Hashmap work in Java?
How to initialise an array in Kotlin with values?
View vs Viewgroup in Android?
Explain Diff types of subject in RX?
When do you use an observer pattern?
Explain the builder pattern?
What's Singleton, when do you use it in Android?
Why ConstraintLayout? Barriers vs Guidelines, Why Group/Chains?
Why do we use WeakReferences?
Difference between Fragment Manager and childFragmentManager ?
How do you secure shared preference from exposure?
Manifest related attributes - allowBackup, intent-filters, process, taskAffinity, permission vs uses-permission etc.
What do you use to handle a very fast Sensor that emits many readings at a time in Rx way?
Observable vs Completable vs Single.
Rx vs Coroutines. Which one do you prefer and when?
What are the annotations that you used in Dagger2? What is named annotation? What is a Qualifier?
How does Proguard work?
Why do we need to define activity in the manifest?
How SharedPreferences work internally?
How to check the null status of a latinit variable?
Why use the suspend function in Kotlin Coroutines?
Explain Coroutine LifecycleScope.
Explain about dispatchers in coroutines? How to switch dispatchers in coroutines?
What is the difference between launch and async in coroutines?
Stack vs Heap allocation in Java.
What's the difference between concatMap() and flatMap() in Rxjava?
Let’s say 4 activities are there A->B->C->D. How to launch A from D finishing in between activities?
4 Activities are there A->B->C->D.How to finish application from D if none of the activities opened earlier finished till now?
Why do we use Headless fragments?
Ways to optimise an Android Application.
What is reified in kotlin ?
All the Android Architecture Components - 
Data Binding: It helps in declaratively binding UI elements in our layout to data sources of our app.
Lifecycles: It manages activity and fragment life cycles of our app, survives configuration changes, avoids memory leaks and easily loads data into our UI.
LiveData: It notifies views of any database changes. Use LiveData to build data objects that notify views when the underlying database changes.
Navigation: It handles everything needed for in-app navigation in Android applications.
Paging: It helps in gradually loading information on demand from our data source.
Room: It is a SQLite object mapping library. Use it to Avoid boilerplate code and easily convert SQLite table data to Java objects. Room provides compile time checks of SQLite statements and can return RxJava, Flowable and LiveData observables.
ViewModel: It manages UI-related data in a lifecycle-conscious way. It stores UI-related data that isn't destroyed on app rotations.
WorkManager: It manages every background job in Android with the circumstances we choose.



ROUND 2 (In depth Android, Ask to write code) ->

Implement Search autocomplete/login form using rxjava (Ask if candidate knows Rxjava)
Test driven development if worked on before
Implement your own Garbage collection in java.
Suppose you have 10 images to fetch from Server. What is the best way to fetch images? (Hint: Using ThreadPool and Executor)
Proguard-Obfuscation/ Minification, Build Variants, Flavours.
how to create parallel Network calls with Rxjava?
What's an Eventbus? Can you design one?
Implementing Dark Mode Theme in Android
Implement your own Async Task with callback to ui and that should not leak memory.
Implement a single adapter for multiple recycler views for Generic Type?
What is Dependency Injection? Ask how it works internally
Draw a simple basic design you follow to make an android application(folder structure, methods, variables)
Design Patterns and Practical Usage - Observer, Builder, Factory etc.
How to reduce battery usage in an android application? 
How to change some parameters in an app without app update? Hint: Remote Config
What is memory leak and ways to avoid memory leaks
How to flatten view hierarchy for better performance?  Ask for new UI patterns
How to prevent man-in-middle attack? (SSL certificate pinning)
Clean architecture. MVP vs MVVM (Ask for flow chart)
Android best practises
Code checks
Linters
Formatter
Measuring app performance
Unit test cases
Viewmodel internals and working ? Make them write one viewmodel 
Outline the process of creating custom Views?














ROUND 3 (System Design)  ->

Android system design can be roughly summarised like this and you can decide based on these points : 

domain modelling (this is not specific to Android)
It should support multiple platforms
design of presentation layer (Activities and Fragments, MVx architecture patterns, configuration changes, save and restore)
usage of background Services (e.g. for location tracking, push messages, etc.)
persistent storage (SQLite, ORMs, maybe Realm, etc.)
multi-threading (UI thread, offload to background threads, maybe Rx, etc.)
design of networking layer (http, libraries, error handling, optimizations, etc.)
Other topics might include permissions management, Activity vs Fragment considerations, comparison of libraries and frameworks, difference between Contexts, etc.
About dependency injection 
You might also ask about offline work
What APIs/backend services would you request from the backend team?
Data format of the APIs
How would you parse the APIs?
How would you design the UI? How would you implement infinite scroll?
How would you structure the data? How would you store it for persistence


Some of the design questions you can ask based on difficulty and experience ->

Design News app
Design a Location Tracking application
Design a Todo app
Design an alarm clock
Design a photo-sharing app
Design a shopping cart.
Design a Stock App












DATA STRUCTURES ->

Move all zeros in an array to the Left or Right
Check if a subarray with 0 sum exists or not
Find all paths from the first cell to the last cell of a matrix
Write a program to in-place remove all extra spaces from a string
Remove adjacent duplicate characters from a string
Find duplicate parenthesis in an expression
Find the next greater element for every array element
Given a sorted matrix (both row wise and column wise) , find if x is present in matrix in linear time
Find all possible combinations from array of coins to that sum upto x
Find how many islands are present in a given graph (1 represents land and 0 as water)


Feel free to add more here ……
